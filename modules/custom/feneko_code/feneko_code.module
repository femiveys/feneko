<?php
define('FENEKO_CODE_ORDER_STATUSES_TABLE', 'order_statuses');
define('FENEKO_CODE_IMPORT_DELIMITER', ';');

function feneko_code_permission() {
  return array(
    'see the catalog' => array(
      'title' => t('see the catalog'),
      'description' => t('see the catalog'),
    ),
  );
}


function feneko_code_menu(){
  $items['user/%user/logout'] = array(
    'title' => 'Log out',
    'page callback' => 'feneko_user_logout',
    'page arguments' => array('user_profile_form', 1),
    'access callback' => 'user_edit_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
  );

  $items['catalog/%/%'] = array(
    'title' => 'Feneko catalog',
    'page callback' => 'feneko_catalog',
    'page arguments' => array(1,2,3),
    'access callback' => 'user_access',
    'access arguments' => array('see the catalog'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'feneko_code.catalog.inc',
  );

  $items['admin/config/feneko_import'] = array(
    'title' => 'Feneko Import',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('feneko_code_import_form'),
    'access arguments' => array('admin_manyforms'),
    'file' => 'feneko_code.import.inc',
  );

  $items['user/%/feneko_screens_orders'] = array(
    'title' => 'Lopende orders',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'feneko_order_statuses',
    'access arguments' => array('submit_manyforms'),
  );

  return $items;
}


/**
 * Implements hook_block_info().
 */
function feneko_code_block_info() {

  $blocks['feneko_code_flipper'] = array(
    'info' => t('link to flipper block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function feneko_code_block_view($delta) {
  switch ($delta) {
    case 'feneko_code_flipper':
    return feneko_code_flipper();

  }
}


/**
 * Render block().
 */
function feneko_code_flipper(){
  global $language;
  $block = array();
  $block['subject'] = 'Catalogus';
  $block['content'] = '<div class="catalogus-links">'.l(t('Colors catalogus'),'catalog/colors/pdf',array(
    'attributes' => array(
      'class' => array('rodeknop'),
      'target'=>'_blank',
    )
    )).'</div><div class="catalogus-links">'.l(t('Screens catalogus'),'catalog/screens/pdf',array(
    'attributes' => array(
      'class' => array('rodeknop'),
      'target'=>'_blank',
    )
    )).'</div>';
  return $block;
}


function feneko_user_logout(){
  global $user;
  module_invoke_all('user_logout', $user);
  session_destroy();
  drupal_set_message(t('You are logged out'));
  drupal_goto('<front>');
}


function feneko_code_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_register_form') {
    $form['#submit'][]  = 'feneko_code_inform_admin';
  }
}

function feneko_code_get_order4_options() {
  global $user;
  $wrapper = entity_metadata_wrapper('user', $user);
  $klantennummers = $wrapper->field_klantennummer->value();
  return array_combine($klantennummers, $klantennummers);
}

function feneko_code_inform_admin($form, &$form_state) {
  $values = $form_state['values'];
  $body = 'A user registered on feneko.be.
  Please check his/her account and activate it.
  His language is  ' . $values['language'] . '
  The user name is ' . $values['name'] . '
  The BTW nummer is ' . $values['field_btw_nummer']['und'][0]['value'] . '
  The Company is ' . $values['field_bedrijf']['und'][0]['value'] . '
  The telefoon is ' . $values['field_telefoon']['und'][0]['value'] . '
  Administrate the users here: http://feneko.be/admin/people .
  ';
  $to = 'jeremie@fenekobvba.be';
  $from = 'no-reply@feneko.be';
  $header_cc = 'david@fenekobvba.be';
  $header_cc = 'wouters.f@gmail.com';
  $subject = 'User registratie op [feneko.be]';
  $message = drupal_mail(
    'feneko_code',
    'user_registers',
    $to,
    user_preferred_language($user),
    array(
      'body' => $body,
      'subject' => $subject,
      'headers' => array(
        'Cc' => $header_cc,
        'Bcc' => $header_bcc,
      ),
      $from,
      TRUE)
    );
}


function feneko_code_mail($key, &$message, $params){
  if (isset($params['subject'])) {
    $message['subject'] = $params['subject'];
  }
  if (isset($params['body'])) {
    $message['body'][] = $params['body'];
  }
  if (isset($params['headers']) && is_array($params['headers'])) {
    $message['headers'] += $params['headers'];
  }
  switch ($key) {
    case 'user_registers':
      // do something specific for mails of type key1
      break;
   case 'key2':
      // do something specific for mails of type key2
      break;
   }
}


function feneko_ongoing_orders() {
  global $user;
  global $language;
  $date_format = "d/m/Y";

  $mapping = array(
    'INGEVOERD'           => array(
      'label' => array(
        'nl' => 'INGEVOERD',
        'fr' => 'ENCODÉE',
      ),
      'description' => array(
        'nl' => 'Order werd ingegeven',
        'fr' => 'Encodage effectué',
      ),
    ),
    'OFFERTE' => array(
      'label' => array(
        'nl' => 'OFFERTE',
        'fr' => 'OFFRE',
      ),
      'description' => array(
        'nl' => 'Er werd een offerte verstuurd',
        'fr' => 'Offre envoyée au client',
      ),
    ),
    'BACKORDER' => array(
      'label' => array(
        'nl' => 'BACKORDER',
        'fr' => 'BACKORDER',
      ),
      'description' => array(
        'nl' => 'Er wordt informatie van de klant verwacht',
        'fr' => 'Nous attendons des informations supplémentaires',
      ),
    ),
    'BEVESTIGD' => array(
      'label' => array(
        'nl' => 'BEVESTIGD',
        'fr' => 'CONFIRMÉE',
      ),
      'description' => array(
        'nl' => 'Orderbevestiging vertuurd',
        'fr' => 'Confirmations de commande envoyées',
      ),
    ),
    'PRODUCTIE' => array(
      'label' => array(
        'nl' => 'PRODUCTIE',
        'fr' => 'PRODUCTION',
      ),
      'description' => array(
        'nl' => 'Order is in productie',
        'fr' => 'Produits en production',
      ),
    ),
    'GELEVERD' => array(
      'label' => array(
        'nl' => 'GELEVERD',
        'fr' => 'LIVRÉE',
      ),
      'description' => array(
        'nl' => 'Order is geleverd',
        'fr' => 'Ordre est livré',
      ),
    ),
    'CONTROLE' => array(
      'label' => array(
        'nl' => 'CONTROLE',
        'fr' => 'CONTRÔLE',
      ),
      'description' => array(
        'nl' => 'Interne controle van ingevoerde order',
        'fr' => 'Controle interne d’ordre encodée',
      ),
    ),
    'GECONTROLEERD' => array(
      'label' => array(
        'nl' => 'GECONTROLEERD',
        'fr' => 'CONTROLÉE',
      ),
      'description' => array(
        'nl' => 'Goedkeuring van de klant gewenst',
        'fr' => 'Nous attendons l’accord du client',
      ),
    ),
    'GEREED GEMELD'           => array(
      'label' => array(
        'nl' => 'GEREED GEMELD',
        'fr' => 'PRÊT',
      ),
      'description' => array(
        'nl' => 'Orders is klaar voor levering',
        'fr' => 'Produits près pour livraison',
      ),
    ),
    'BESTELD' => array(
      'label' => array(
        'nl' => 'BESTELD',
        'fr' => 'COMMANDÉE',
      ),
    ),
    'KLAAR VOOR LEVERING' => array(
      'label' => array(
        'nl' => 'KLAAR VOOR LEVERING',
        'fr' => 'PRÊT POUR LIVRAISON',
      ),
    ),
    'GEFACTUREERD' => array(
      'label' => array(
        'nl' => 'GEFACTUREERD',
        'fr' => 'FACTURÉE',
      ),
    ),
    'ONBEKEND' => array(
      'label' => array(
        'nl' => 'ONBEKEND',
        'fr' => 'INCONNUE',
      ),
    ),
    'GEBLOKKEERD' => array(
      'label' => array(
        'nl' => 'GEBLOKKEERD',
        'fr' => 'BLOQUÉE',
      ),
    ),
    'GEANNULEERD' => array(
      'label' => array(
        'nl' => 'GEANNULEERD',
        'fr' => 'ANNULÉE',
      ),
    ),
    'leveren' => array(
      'label' => array(
        'nl' => 'leveren',
        'fr' => 'livrer',
      ),
    ),
    'ophalen' => array(
      'label' => array(
        'nl' => 'ophalen',
        'fr' => 'venir chercher',
      ),
    ),
  );

  $klantennummers = feneko_code_get_order4_options();

  $header = array(
    'orderbon' => array(
      'data' => t('Ordernummer'),
      'field' => 'orderbon',
    ),
    'ref' => array(
      'data' => t('Referentie'),
      'field' => 'ref',
    ),
    // 'omschrijving' => t('Beschrijving'),
    'kleur' => array(
      'data' => t('Kleur'),
      'field' => 'kleur',
    ),
    'order_datum' => array(
      'data' => t('Orderdatum'),
      'field' => 'order_datum',
    ),
    'lever_datum' => array(
      'data' => t('Leverdatum'),
      'field' => 'lever_datum',
    ),
    'aantal' => t('Aantal'),
    'fase' => array(
      'data' => t('Fase') . "<span class=\"help\"></span>",
      'field' => 'fase',
    ),
    'bedrag' => t('Bedrag'),
    'leverconditie' => t('Leverconditie'),
  );

  $fields = array(
    'orderbon',
    'ref',
    'omschrijving',
    'kleur',
    'order_datum',
    'lever_datum',
    'aantal',
    'fase',
    'bedrag',
    'leverconditie',
  );

  if(count($klantennummers) > 1) {
    $header['klant'] = array(
      'data' => t('klantennummer'),
      'field' => 'klant',
    );
    $fields[] = 'klant';
  }

  $unknown = t("ONBEKEND");

  $results = db_select(FENEKO_CODE_ORDER_STATUSES_TABLE)
               ->condition('klant', $klantennummers, 'IN')
               ->condition('fase', 'GEFACTUREERD', '<>')
               ->condition('fase', 'GEBLOKKEERD', '<>')
               ->condition('fase', 'GEANNULEERD', '<>')
               ->fields(NULL, $fields)
               ->extend('TableSort')
               ->orderByHeader($header)
               ->execute()
               ->fetchAll(PDO::FETCH_ASSOC)
              ;

  // Show a message when nothing has been found
  if(count($results) === 0) {
    return array(
      '#markup' => t('Er zijn geen bestellingen in behandeling.')
    );
  }

  // Transform some values
  $rows = array();
  $count = 0;
  foreach ($results as $result) {
    $result['bedrag'] = "€" . str_replace('.', ',', sprintf("%01.2f", $result['bedrag']));
    $result['order_datum'] = $result['order_datum'] ? date($date_format, $result['order_datum']) : $unknown;
    $result['lever_datum'] = $result['lever_datum'] ? date($date_format, $result['lever_datum']) : $unknown;


    $result['fase']          = $mapping[$result['fase']]['label'][$language->language];
    $result['leverconditie'] = $mapping[$result['leverconditie']]['label'][$language->language];

    // Make the orderbon span over 2 rows
    $result['orderbon'] = array('data' => $result['orderbon'], 'rowspan' => 2);

    // Set the omschrijving row and remove the omschrijving from the result
    $omschrijving = array(
      array('data' => $result['omschrijving'], 'colspan' => count($header) - 1),
    );
    unset($result['omschrijving']);

    $evenodd = $count++ % 2 === 0 ? 'even' : 'odd';

    $rows[] = array('data' => $result      , 'no_striping' => TRUE, 'class' => $evenodd);
    $rows[] = array('data' => $omschrijving, 'no_striping' => TRUE, 'class' => $evenodd);
  }

  $table = array(
    '#theme'  => 'table',
    '#header' => $header,
    '#rows'   => $rows,
  );

  $text  = '';
  foreach ($mapping as $key => $value) {
    if(isset($value['description'])) {
      $text .= '<div>';
      $text .= '<span class="label">' . $value['label'][$language->language] . ': </span>';
      $text .= '<span class="descr">' . $value['description'][$language->language] . '</span>';
      $text .= '</div>';
    }
  }

  $help = array(
    '#type' => 'container',
    '#attributes' => array('class' => array('help-text')),
    'text' => array('#markup' => $text),
  );

  return array(
    '#type' => 'container',
    'help' => $help,
    'table' => $table,
  );
}

function feneko_order_statuses() {
  return array(
    'ongoing' => feneko_ongoing_orders(),
  );
}

/**
 * Implements of hook_services_resources().
 */
function feneko_code_services_resources() {
  $api = array(
    'order_statuses' => array(
      'operations' => array(
        'create' => array(
          'help' => 'Updates the statuses of orders',
          'callback' => '_feneko_order_statuses_service',
          'access callback' => TRUE,
          // 'access arguments' => array('submit_manyforms'),
          'args' => array(
          //   array(
          //     'name' => 'file',
          //     'type' => 'string',
          //     'description' => 'File to upload',
          //     'source' => array('data' => 'file'),
          //     // 'optional' => FALSE,
          //   ),
          ),
        ),
      ),
    ),
  );
  return $api;
}

/**
 * Callback function for order statuses
 */
function _feneko_order_statuses_service($file) {
echo 'sqsqs';
  // dpm('called');
  // dpm($file);
  return 'hjknlk';
  echo json_encode(array('ttt' => 'haha'));
}
